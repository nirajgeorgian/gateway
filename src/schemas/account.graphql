type Account {
  AccountId: String!
  Email: String
  Username: String
  Description: String
  PasswordHash: String
  PasswordSalt: String
  VerificationCode: String
  Verified: Boolean
  AccountType: String
  CreatedAt: Timestamp
  UpdatedAt: Timestamp
}
type ValidationResponse {
  Success: Boolean
}
type UpdatedAccount {
  Account: Account
  Success: Boolean
}
type AuthRes {
  Token: String
  Valid: Boolean
}

input ReadAccountReq {
  AccountId: String!
}
input ValidateUsernameReq {
  Username: String!
}
input ValidateEmailReq {
  Email: String!
}
input AccountReq {
  AccountId: String
  Email: String!
  Username: String!
  Description: String!
  PasswordHash: String!
  AccountType: String!
}
input AuthReq {
  Email: String
  PasswordHash: String
}

extend type Query {
  ReadAccount(input: ReadAccountReq!): Account
  ValidateUsername(input: ValidateUsernameReq!): ValidationResponse
  ValidateEmail(input: ValidateEmailReq!): ValidationResponse
}

extend type Mutation {
  CreateAccount(input: AccountReq!): Account
  UpdateAccount(input: AccountReq!): UpdatedAccount
  Auth (input: AuthReq!): AuthRes
}
